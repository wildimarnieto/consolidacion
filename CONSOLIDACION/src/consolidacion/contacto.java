/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package consolidacion;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USUARIO
 */
public class contacto extends javax.swing.JPanel {
  

private JTable table;
private DefaultTableModel modelotabla;
private Connection connection=null;
private ResultSet rs= null;
private ResultSet rs2= null;
private Statement s=null;
  /**
   * Creates new form contacto
   */
  public contacto() {
    modelotabla = new DefaultTableModel(null,getColumnas());
    setFilas();
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
 
  
  public long  calcular(String añ,String me,String di){
  
  final long MILLSECS_PER_DAY = 24 * 60 * 60 * 1000; //Milisegundos al día 
java.util.Date hoy = new Date(); //Fecha de hoy 
     
int año = Integer.parseInt (añ); int mes = Integer.parseInt (me); int dia = Integer.parseInt (di);

Calendar calendar = new GregorianCalendar(año, mes-1, dia); 
java.sql.Date fecha = new java.sql.Date(calendar.getTimeInMillis());
 long diferencia = ( hoy.getTime() - fecha.getTime() )/MILLSECS_PER_DAY;
System.out.println(diferencia); 
  
  
  
  return diferencia;
  }
  
  
  
  private String[] getColumnas(){
    
      
    String columna[]= new String []{"NUEVO","DIAS","CELULAR ","PADRE ESPIRITUAL","CELULAR","AUX SUPERVISOR","CELULAR","SUPERVISOR","CELULAR","CONSOLIDADOR","CELULAR"};
  
  return columna;
  }
  
  private void setFilas(){
  
  
  
   try{
	   s=connection.createStatement();
       rs = s.executeQuery("SELECT * FROM nuevo");	   
	 Object datos[] = new  Object[11]; 
       String string="";
       while(rs.next()){
	 string +=rs.getString(1)+"\n";
		   long numero= calcular(rs.getString(13).substring(0, 4),rs.getString(13).substring(5,7),rs.getString(13).substring(8, 10));
		    
	  
		   //
		   string="";
		   if(numero>8){
	datos[0]=rs.getObject(2);
	datos[2]=rs.getObject(1);
	datos[1]=numero;
	modelotabla.addRow(datos);
	rs2 = s.executeQuery("SELECT * FROM lider WHERE cedula='"+rs.getObject(1)+"'");	
	datos[3]=rs2.getObject(2);
	datos[4]=rs2.getObject(10);	   
		   
		   
		   
		   
		   }
	 
	
	   }
       rs.close();
	}catch (Exception e){
		System.out.println("Problema Buscando la Base de Datos");
	}
 
  }
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    tabla = new javax.swing.JTable();

    jLabel1.setText("NUEVOS SIN CONTACTO");

    jButton1.setText("BUSCAR");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    tabla.setModel(modelotabla);
    jScrollPane1.setViewportView(tabla);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(182, 182, 182)
            .addComponent(jButton1)
            .addGap(179, 179, 179)
            .addComponent(jLabel1))
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1063, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(17, 17, 17)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(jButton1))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(44, 44, 44))
    );
  }// </editor-fold>//GEN-END:initComponents
public void conexion()
{
    if(connection !=null){
		return;
	}
	
	String url ="jdbc:postgresql://localhost:5433/CONSOLIDACION";
	String password ="ideafix";
	try{
	   Class.forName("org.postgresql.Driver");
	   
	   connection=DriverManager.getConnection(url,"postgres",password);
	   
	   if(connection!=null){
		   System.out.println("Conectando a Base de Datos...");
	   }
	} catch (Exception e){
		System.out.println("Problemas de Conexion");
	}
}
  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
    conexion();
  setFilas();
    
    try{
	   s=connection.createStatement();
       rs = s.executeQuery("SELECT * FROM lider WHERE cedula='1072719418'");	   
		
	}catch (Exception e){
		System.out.println("Problema Buscando la Base de Datos");
	}
 String string="";
   
   try{
	   while(rs.next()){
		 
	              Object[] fila = new Object[2];//Creamos un Objeto con tantos parámetros como datos retorne cada fila 
                                              // de la consulta
                fila[0] = rs.getString(2); //Lo que hay entre comillas son los campos de la base de datos
		System.out.println(rs.getString(2));
                fila[1] = rs.getString(3);
               
	   }
	   tabla.updateUI();//Actualiza la tabla
   }catch (Exception e){
		System.out.println("Problema al imprimir la informacion.");
	}
	
      // TODO add your handling code here:
  }//GEN-LAST:event_jButton1ActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable tabla;
  // End of variables declaration//GEN-END:variables
}
